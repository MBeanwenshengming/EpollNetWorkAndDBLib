[Test_NetWork_Base]
IP=127.0.0.1
PORT=6000
LISTENLISTSIZE=1000

[Test_NetWork_Global]
SendThreadCount=1				;发送线程数量
RecvThreadCount=1				;接收线程数量
EpollThreadCount=1				;EPOLL线程数量
AcceptRecvedPacketPoolLen=10485760		;accept线程提交的接受连接的数据包的缓存大小，主线程中有个环形缓存区,用来存放accept线程提交的接受到的连接，单位：字节，目前设置为10M
RecvThreadPacketPoolLen=31457280		;recv线程提交到主线程的获取到的数据包，每个recv线程一个环形缓存区，单位：字节 目前设置为30M
CloseThreadPacketPoolLen=10485760		;close线程提交到主线程的要断开的连接的信息，主线程环形缓存区存在数据，单位：字节 目前设置为10M


[Test_NetWork_Session]				
MaxSessionNum=10000				;最大接收的连接数
KickOutIdleSessionTime=10			;超过这个值没有数据包上来，那么踢掉该连接，KickOutIdleSessionTime秒数
MaxPacketLen=8192				;接收的最大数据包的长度(单位：字节），这个数据也决定了Session接收缓存的长度，缓存长度设置为MaxPacketLen + 4字节
MaxSendBufLen=131072				;发送缓存的长度，发送数据先拷贝到发送缓存再发送（单位：字节）

[Test_NetWork_SendThread]
SendWorkItemCount=10000			;每个发送线程工作列表的最大长度
EpollOutEventMaxCount=5000			;每个发送线程处理EPOLLOUT事件的工作列表的最大长度

[Test_NetWork_RecvThread]
RecvWorkItemCount=5000			;epollin事件的队列长度，需要处理的接收事件

[Test_NetWork_EpollThread]
WaitClientSizePerEpoll=5000			;每个epollHandle处理的连接数量


[Test_NetWork_CloseThread]
CloseWorkItemCount=10000			;待处理的关闭事件的数量,每个线程一个（main,recv,send,epoll,accept)








